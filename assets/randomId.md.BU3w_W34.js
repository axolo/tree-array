import{_ as a,c as t,o as s,a3 as e}from"./chunks/framework.B0hu1HKu.js";const b=JSON.parse('{"title":"随机字符串","description":"","frontmatter":{},"headers":[],"relativePath":"randomId.md","filePath":"randomId.md","lastUpdated":1715330093000}'),i={name:"randomId.md"},d=e(`<h1 id="随机字符串" tabindex="-1">随机字符串 <a class="header-anchor" href="#随机字符串" aria-label="Permalink to &quot;随机字符串&quot;">​</a></h1><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(prefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>生成一个由小写字母和数字组成的自定义前缀（<code>prefix</code>）的随机字符串，如：<code>i_9fang05da21</code>。</p><div class="danger custom-block"><p class="custom-block-title">碰撞几率</p><p>基于<code>Math.random()</code>生成，碰撞几率取决于<code>Math.random()</code>的随机性，可能不适用于大数据场景。</p></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><table><thead><tr><th>参数</th><th>类型</th><th>默认</th><th>说明</th></tr></thead><tbody><tr><td><code>prefix</code></td><td><code>string</code></td><td><code>&#39;&#39;</code></td><td>随机字符串前缀，如：<code>i_</code></td></tr></tbody></table><h2 id="返回" tabindex="-1">返回 <a class="header-anchor" href="#返回" aria-label="Permalink to &quot;返回&quot;">​</a></h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td><code>string</code></td><td>随机字符串，如：<code>i_9fang05da21</code></td></tr></tbody></table><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lKNAj" id="tab-w2AxeGm" checked="checked"><label for="tab-w2AxeGm">调用</label><input type="radio" name="group-lKNAj" id="tab-G316GiW"><label for="tab-G316GiW">结果</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { randomId } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@axolo/tree-array&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;i_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// i_9fang05da21</span></span></code></pre></div><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>i_9fang05da21</span></span></code></pre></div></div></div>`,10),n=[d];function h(l,o,p,r,c,k){return s(),t("div",null,n)}const m=a(i,[["render",h]]);export{b as __pageData,m as default};
